name: Build latest Docker image

on:
  schedule:
    # Runs at 11:00 UTC every Monday
    - cron: '0 11 * * 1'
  push:
    tags:
      - "*"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DOCKER_TARGET_PLATFORM: linux/amd64

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Get latest published version tag from GHCR
        id: latest_version
        run: |
          LATEST_TAG=$(curl -s -L https://github.com/n-hass/caddy-cloudflare/releases/latest | grep '<title>Release' | sed -n 's/.*Release v\([0-9]*\.[0-9]*\.[0-9]*\) .*/\1/p')
          echo "Latest published version: $LATEST_TAG"
          echo "latest_version=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Prepare tags
        id: prepare
        run: |
          LATEST_RELEASE=$(curl -s https://api.github.com/repos/caddyserver/caddy/releases/latest | grep \"tag_name\")
          VERSION=$(echo $LATEST_RELEASE | awk -F\" '{print substr($4, 2)}')
          echo "Extracted version: $VERSION"
          echo "docker_platform=${DOCKER_TARGET_PLATFORM}" >> $GITHUB_OUTPUT
          echo "tag=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if build is necessary
        if: steps.latest_version.outputs.latest_version != steps.prepare.outputs.tag
        run: echo "Version differs from the latest published. Proceeding with build."
        
      - name: Checkout
        uses: actions/checkout@v4
        if: steps.latest_version.outputs.latest_version != steps.prepare.outputs.tag

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        if: steps.latest_version.outputs.latest_version != steps.prepare.outputs.tag

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: steps.latest_version.outputs.latest_version != steps.prepare.outputs.tag
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build container and Push
        uses: docker/build-push-action@v4
        if: steps.latest_version.outputs.latest_version != steps.prepare.outputs.tag
        with:
          context: .
          platforms: ${{ env.DOCKER_TARGET_PLATFORM }}
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_NAME }}:${{ steps.prepare.outputs.tag }}
            ghcr.io/${{ env.IMAGE_NAME }}:latest
